{
  "meta": {
    "title": "Hamin Lee - Resume",
    "description": "웹·온디바이스 LLM·실시간 스트리밍·로보틱스를 '출시 가능한 제품'으로 잇는 풀스택 엔지니어입니다.",
    "portfolioTitle": "Portfolio - Hamin Lee",
    "portfolioDescription": "Software 3.0 - The Era of LLM-Programmable Systems"
  },
  "navbar": {
    "resume": "이력서",
    "portfolio": "포트폴리오",
    "github": "깃허브",
    "twitter": "트위터",
    "kakao": "카카오톡",
    "theme": "테마"
  },
  "resume": {
    "downloadPDF": "인쇄용 PDF 다운로드",
    "downloadFilename": "이하민_이력서.pdf",
    "hero": {
      "title": "풀스택 엔지니어 이하민입니다.",
      "location": "경기도 안산, 대한민국",
      "birthDate": "1995년 03월 04일",
      "age": "만 30세",
      "gender": "남성 (He, Him)",
      "description": "웹·온디바이스 LLM·실시간 스트리밍·로보틱스를 '출시 가능한 제품'으로 잇는 풀스택 엔지니어입니다.",
      "summary": "웹·온디바이스 LLM·실시간 스트리밍·로보틱스를 '출시 가능한 제품'으로 잇는 풀스택 엔지니어입니다. 모바일 온디바이스 AI와 실시간 미디어/로보틱스를 잇는 브릿지·스트리밍·저지연 제어 전문성을 보유하고 있으며, 프라이버시 중심 아키텍처와 PWA/엣지 배포로 사용자 경험과 성능을 동시에 달성합니다. 제품 초기화부터 배포/운영 자동화까지 엔드투엔드 오너십으로 다수 프로젝트를 출시하고 운영한 경험이 있습니다."
    },
    "sections": {
      "about": "소개",
      "work": "경력",
      "education": "학력",
      "skills": "기술 스택",
      "projects": "프로젝트",
      "projectsSubtitle": "사이드 프로젝트 이력",
      "projectsDescription": "다양한 사이드 프로젝트를 진행하며 새로운 기술을 탐구하고 아이디어를 실현해왔습니다.",
      "publications": "출판",
      "publicationsSubtitle": "출판 이력",
      "publicationsDescription": "기술과 개발에 대한 인사이트를 담은 저서입니다.",
      "hackathons": "수상 및 자격증",
      "hackathonsSubtitle": "수상 이력",
      "hackathonsDescription": "다양한 공모전과 대회에서 수상한 경력과 보유 자격증입니다.",
      "contact": "연락처"
    },
    "publication": {
      "author": "저자",
      "publisher": "출판사",
      "publishDate": "출간일",
      "ebookLink": "E-Book 링크"
    },
    "contact": {
      "kakao": "카카오톡"
    },
    "portfolioLink": "포트폴리오 읽기"
  },
  "data": {
    "location": "경기도 안산, 대한민국",
    "birthDate": "1995년 03월 04일",
    "age": "만 30세",
    "gender": "남성 (He, Him)",
    "description": "웹·온디바이스 LLM·실시간 스트리밍·로보틱스를 '출시 가능한 제품'으로 잇는 풀스택 엔지니어입니다.",
    "summary": "웹·온디바이스 LLM·실시간 스트리밍·로보틱스를 '출시 가능한 제품'으로 잇는 풀스택 엔지니어입니다. 모바일 온디바이스 AI와 실시간 미디어/로보틱스를 잇는 브릿지·스트리밍·저지연 제어 전문성을 보유하고 있으며, 프라이버시 중심 아키텍처와 PWA/엣지 배포로 사용자 경험과 성능을 동시에 달성합니다. 제품 초기화부터 배포/운영 자동화까지 엔드투엔드 오너십으로 다수 프로젝트를 출시하고 운영한 경험이 있습니다.",
    "work": {
      "poul": {
        "company": "주식회사 피오유엘",
        "title": "CTO",
        "location": "대한민국",
        "start": "2024년 6월",
        "end": "2025년 10월",
        "description": "온디바이스 LLM 모바일 앱 '라미앱' 리드 엔지니어로 웹뷰↔네이티브 브릿지 아키텍처를 설계하고 구현했습니다. ONNX Runtime, OpenCV, MMKV를 활용한 온디바이스 STT/TTS·이미지 처리 파이프라인을 구축했으며, AI 기반의 대시보드를 개발하고 Supabase 기반의 DB 연동을 구성했습니다. 웹 기반 로봇제어 '라미 로보틱스'에서 딥로봇틱스 Lite3 대상 UDP 제어 프로토콜과 WebRTC 저지연 스트리밍을 구현했고, SLAM 맵핑 UI 및 경로계획 운용 UI를 개발했습니다. 브라우저 내 AI 코딩 에이전트 '큐리오시티'를 단독 개발하여 WebContainer+Monaco 기반 실시간 코드 실행 환경을 구현했습니다."
      },
      "abacus": {
        "company": "아바쿠스 테크놀로지",
        "title": "풀스택 개발자",
        "location": "대한민국",
        "start": "2022년 11월",
        "end": "2024년 6월",
        "description": "교육 하드웨어를 이용한 원격 교육 플랫폼을 개발했습니다. WebRTC를 이용한 실시간 채팅 및 영상 회의 솔루션을 구축했으며, Next.js와 MobX를 사용했습니다. Supabase(PostgreSQL)와 Nest.js로 백엔드를 구축하고 Railway로 인프라를 배포했습니다. ESP-32 기반 하드웨어의 펌웨어 개발에 참여하여 웹 상 원격 업데이트를 구현했고, Web Bluetooth 기술을 활용하여 스마트 교육 하드웨어와 웹 브라우저 간 무설치 통신을 구현했습니다."
      },
      "metamorp": {
        "company": "메타몰프",
        "title": "풀스택 개발자",
        "location": "대한민국",
        "start": "2021년 6월",
        "end": "2022년 11월",
        "description": "웹 기반 3D 슬라이서 프로그램 및 플랫폼 개발에 참여했습니다. React, SCSS(BEM), MobX를 활용하여 컴포넌트를 개발했고, 인터렉션 기반의 Vector Animation을 구현했습니다. Nest.js와 Prisma ORM, TypeScript를 활용하여 백엔드를 개발했으며, AWS Beanstalk, Aurora DB, Railway를 활용하여 배포했습니다. Electron으로 구현된 프로그램을 Intel Mac, Silicon Mac, Linux에서 동작 가능하게 포팅했으며, Redis 기반 Pub/Sub 서버를 구성하여 일렉트론 앱의 실시간 업데이트 배포 시스템을 구축했습니다."
      },
      "toss": {
        "company": "비바리퍼블리카(토스)",
        "title": "웹 오토메이션 개발자",
        "location": "대한민국",
        "start": "2021년 4월",
        "end": "2021년 5월",
        "description": "웹 오토메이션 팀에 참여하여 토스(Toss) 앱을 위한 농협은행, 신한은행, 기업은행 등의 본인인증 과정에 사용되는 스크래핑 모듈을 개발했습니다."
      },
      "aha": {
        "company": "더코퍼레이션(아하)",
        "title": "프론트엔드 개발자",
        "location": "대한민국",
        "start": "2020년 7월",
        "end": "2021년 3월",
        "description": "아하의 지식공유 플랫폼 서비스의 Nuxt.js 2버전의 3버전 마이그레이션 작업에 참여했습니다. vue-state-store라는 오픈소스 상태관리 모듈을 만들어서 프로젝트에 적용했습니다. 아하 커넥츠라는 온라인 상담 서비스의 Next.js 기반 UI 개발에 참여했으며, Sendbird 기반 채팅 시스템을 프론트엔드에서 연결하는 작업을 담당했습니다."
      },
      "rightcode": {
        "company": "올바른 코드",
        "title": "풀스택 개발자",
        "location": "대한민국",
        "start": "2019년 11월",
        "end": "2020년 7월",
        "description": "하이브리드 앱 개발 및 Android, iOS로 출시하는 과정을 전담했습니다. BLE 통신을 이용해서 스포츠용 EMS 기기를 원격 작동하는 앱을 개발했습니다. 호텔용 화재감지기와 서버의 통신 구성 및 관리자 대시보드 페이지 구축에 참여했습니다. 가게 주문 관리 시스템 개발에서 웹브라우저와 포스기 영수증 프린터 통신 프로그램을 개발했습니다. 주식 실시간 정보를 웹에서 크롤링하고 TradingView 라이브러리를 활용하여 앱 내에서 실시간 표기하는 작업을 진행했습니다."
      }
    },
    "education": {
      "hanbat": {
        "school": "국립한밭대학교",
        "degree": "컴퓨터공학과 (중퇴)"
      }
    },
    "projects": {
      "akaBrowser": {
        "description": "크로미엄 엔진 기반으로 오픈소스 브라우저를 만들었습니다. 메인 브라우저를 대체하지 않고 항상 위에 고정되는 보조 브라우저 컨셉이며, 일렉트론으로 베타 출시까지 완료했습니다. Widevine DRM 기반으로 Netflix/Disney+/Prime Video 의 암호화 컨텐츠 스트리밍 재생을 구현했습니다."
      },
      "groundCodes": {
        "description": "좌표 기반 주소 체계로 전 세계 어디든 지역명과 두 단어만으로 위치를 특정할 수 있는 오픈소스 프로젝트입니다. Grok Spiral 알고리즘(O(√N) 효율성)을 자체 개발하였으며, Google Maps API 기반 인터랙티브 웹 앱, RESTful API 서버, 시각화 데모 앱으로 구성된 모노레포 아키텍처입니다. 다국어 지원 및 Cloudflare Pages 배포를 완료했습니다."
      },
      "postRun": {
        "title": "새해인사 우체통",
        "description": "항해99 행사에서 개발한 프로젝트로 3D로 신년인사 카드를 만들고 원하는 이미지를 추가해서 공유할 수 있습니다. LLM에 의해서 새해인사 메시지를 자동으로 작성받거나, 카드 배경으로 사용할 이미지를 A.I로 자동으로 생성해서 카드에 넣을 수 있습니다. 최우수 프로젝트 상을 수상했습니다."
      },
      "fridayGPT": {
        "description": "GPT에 R&R을 부여해서 단계별로 프로그래밍을 진행시키는 프로젝트입니다. 재귀적으로 인공지능이 웹페이지를 검색하고 다시 스스로 질문할 뿐만 아니라, 코드를 완성하기 전까지 각각의 단계를 거쳐 노력합니다."
      }
    },
    "hackathons": {
      "hanghae": {
        "title": "항해 플러스: 제2회 코딩 육상 대회 최우수 프로젝트 상",
        "dates": "2024년 1월",
        "location": "항해99",
        "description": "3D 신년인사 카드 웹앱 '새해인사 우체통' 프로젝트로 최우수 프로젝트 상을 수상했습니다.",
        "win": "최우수 프로젝트 상"
      },
      "socialVenture": {
        "title": "소셜벤처 아이디어 프로듀스20 우수상",
        "dates": "2019년 9월",
        "location": "중소벤처기업부",
        "description": "소셜벤처 아이디어 공모전에서 우수상 KIST원장상을 수상했습니다.",
        "win": "우수상 KIST원장상"
      },
      "police": {
        "title": "경찰청 제4회 과학치안 아이디어 공모전 우수상",
        "dates": "2018년 11월",
        "location": "KIST",
        "description": "경찰청 과학치안 아이디어 공모전에서 우수상 KIST원장상을 수상했습니다.",
        "win": "우수상 KIST원장상"
      },
      "defense": {
        "title": "국방부 창조국방 아이디어 공모전 우수상",
        "dates": "2016년 12월",
        "location": "국방부",
        "description": "국방부 창조국방 아이디어 공모전에서 우수상 국방부장관상을 수상했습니다.",
        "win": "우수상 국방부장관상"
      },
      "certification": {
        "title": "전자기기기능사 자격증",
        "dates": "2013년",
        "location": "한국산업인력공단",
        "description": "전자기기기능사 자격증을 취득했습니다."
      }
    },
    "publications": {
      "cleanVibeCoding": {
        "title": "클린 바이브 코딩",
        "author": "이하민",
        "publisher": "유페이퍼",
        "publishDate": "2025년 7월 3일",
        "description": "생성형 AI가 \"코드를 대량 생산\"하는 시대에, 프로그래머의 가치는 더 적은 코드를 더 명확한 구조로 유지하고, 문제를 정의·검증·전달하는 능력에서 결정됩니다. 이 책은 데이크스트라의 구조적 프로그래밍과 로버트 C. 마틴의 클린 코드를 오늘의 AI 협업 환경으로 확장한 실천서입니다."
      },
      "mugunghwa": {
        "title": "음절 블록 체계를 이용한 한글에서의 72진법 표현 체계",
        "author": "이하민",
        "publisher": "한국통신학회",
        "publishDate": "2019년",
        "description": "영어와 숫자를 혼합하여 32진법을 구현하는 Base 32를 모방해서 순수 한글로 72진법 인코드 체계를 만들었으며, 이를 이용하여 3미터 오차의 GPS 좌표를 짧게 한글 다섯자리로 압축하는 알고리즘을 제안했습니다. 이 논문을 토대로 JavaScript 기반의 오픈소스 구현체 '무궁화 코드'를 개발하여 GitHub에 공개했습니다."
      }
    }
  },
  "portfolio": {
    "downloadPDF": "인쇄용 PDF 다운로드",
    "downloadFilename": "이하민_포트폴리오.pdf",
    "pageNumber": "페이지"
  },
  "notFound": {
    "title": "페이지를 찾을 수 없습니다",
    "description": "요청하신 페이지가 존재하지 않거나 이동되었을 수 있습니다.",
    "goHome": "홈으로 돌아가기",
    "goBack": "이전 페이지로",
    "contactAdmin": "문제가 계속되면 관리자에게 문의해주세요."
  },
  "slides": {
    "llamiApp": {
      "problem": {
        "title": "라미앱 개발 배경",
        "subtitle": "비즈니스 문제 정의",
        "period": "진행기간",
        "periodValue": "2025.05.04 ~ 2025.06.17 출시",
        "role": "맡은 역할",
        "roleValue": "CTO 및 리드 개발자",
        "contribution": "프로젝트 기여도",
        "contributionValue": "30% (네이티브 앱 아키텍팅 및 PoC 구현)",
        "businessProblem": "비즈니스 문제",
        "problem1": "• 결제 페이지에서 <span class=\"font-bold text-red-700 dark:text-red-400\">95% 이탈률</span>",
        "problem2": "• 고객 인터뷰: \"무료 AI 서비스가 많아 결제 망설임\"",
        "problem3": "• CAC가 투자자 요구 대비 <span class=\"font-bold text-red-700 dark:text-red-400\">5배 초과</span>",
        "problem4": "• 기존 AI 서비스 고정비 절감 방안은 대규모 서비스에만 특화",
        "quote": "\"AI 서비스 고정비를 획기적으로 줄일 새로운 방안이 요구됨\""
      },
      "design": {
        "title": "라미앱 설계",
        "subtitle": "요구사항과 해결 방안",
        "requirement1": "요구사항 1: 고정비 제로화",
        "solution1": "→ 온디바이스 AI 앱 설계로 서버 비용 완전 제거",
        "requirement2": "요구사항 2: 웹 팀으로 앱 개발",
        "solution2": "→ Expo 웹뷰 + 핵심 모듈만 React Native/C++ 하이브리드 설계",
        "requirement3": "요구사항 3: 자체 AI 모델 운용",
        "solution3": "→ Gemma3 SLM 파인튜닝 후 GGUF 모델로 배포"
      },
      "implementation": {
        "title": "라미앱 구현",
        "subtitle": "기술적 도전과 해결",
        "coreTitle": "핵심 구현 사항",
        "item1Title": "1. 상태 브릿지 시스템",
        "item1Detail1": "• Observable State 기반 Expo ↔ React Native 상태 공유",
        "item1Detail2": "• 점진적 마이그레이션 가능한 아키텍처",
        "item2Title": "2. AI 모델 업데이트 시스템",
        "item2Detail1": "• Cloudflare R2 기반 GGUF 모델 배포",
        "item2Detail2": "• 앱 재설치 없이 모델 업데이트 가능",
        "item3Title": "3. 크로스 플랫폼 AI 가속",
        "item3Detail1": "• llama.cpp 통한 iOS Metal GPU 가속",
        "item3Detail2": "• Android CPU 최적화 추론",
        "item4Title": "4. 개발 생산성 최적화",
        "item4Detail1": "• 웹 개발자가 네이티브 지식 없이 개발",
        "item4Detail2": "• 타입 안전성 보장된 브릿지 패턴",
        "decisionTitle": "기술적 의사결정",
        "decision1": "• React 컴포넌트로 빠른 MVP 구현 → 점진적 React Native 전환",
        "decision2": "• 브릿지 패턴 추상화로 중복 코드 60% 감소",
        "decision3": "• EAS Build 자동화로 빌드 시간 50% 단축",
        "decision4": "• Observable 기반 상태 관리로 타입 안전성 확보"
      },
      "results": {
        "title": "라미앱 결과",
        "subtitle": "비즈니스 임팩트",
        "metric1Value": "0원",
        "metric1Title": "AI 고정비 달성",
        "metric1Desc": "100% 온디바이스 기술",
        "metric2Value": "500%",
        "metric2Title": "고객 참여도 향상",
        "metric2Desc": "유료 AI 대비 5배",
        "metric3Value": "2.6배",
        "metric3Title": "개발 생산성 향상",
        "metric3Desc": "MVP 6주 → 2.3주",
        "learningsTitle": "프로젝트를 통해 배운 점",
        "businessTitle": "비즈니스 임팩트",
        "business1": "• 기술적 제약을 비즈니스 기회로 전환",
        "business2": "• 온디바이스 AI로 고정비 제로화 달성",
        "business3": "• Cloudflare R2로 배포 비용 최적화",
        "technicalTitle": "기술적 의사결정",
        "technical1": "• 빠른 개발 vs 좋은 설계의 균형점 찾기",
        "technical2": "• 점진적 마이그레이션 전략의 중요성",
        "technical3": "• 팀 역량에 맞는 기술 스택 선택"
      }
    },
    "llamiRobotics": {
      "problem": {
        "title": "라미 로보틱스 - 4족보행 로봇",
        "subtitle": "DeepRobotics 로봇개 원격 제어 및 자율 주행 플랫폼",
        "period": "프로젝트 기간",
        "periodValue": "2025.07.16 ~ 2025.09.01 (중단)",
        "role": "역할",
        "roleValue": "CTO 및 리드 개발자",
        "contribution": "프로젝트 기여도",
        "contributionValue": "이하민 50%: 딥로봇틱스 Lite3 로봇개 원격 제어 및 자율 주행 시스템 개발. WebRTC 기반 실시간 영상 스트리밍과 WebSocket 통신을 통한 로봇 제어, SLAM 기반 맵핑 및 경로 계획 알고리즘 구현",
        "challengesTitle": "핵심 기술 과제",
        "challenge1Title": "로봇 웹 통신 프로토콜 부재",
        "challenge1Desc": "딥로봇틱스 Lite3는 UDP 바이너리 프로토콜 사용, 공식 웹 SDK 없음",
        "challenge2Title": "실시간 영상 전송 지연",
        "challenge2Desc": "RTSP 스트림을 웹에서 직접 재생 불가, HLS는 3~5초 지연",
        "challenge3Title": "복잡한 환경에서의 경로 계획",
        "challenge3Desc": "장애물 회피, 작업 영역 제약, 선호 경로 등 다층 제약 조건 처리",
        "challenge4Title": "영상 품질 및 성능 문제",
        "challenge4Desc": "로봇 카메라의 불안정한 화이트밸런스, CPU 기반 영상 처리는 30fps에서 프레임 드롭 발생"
      },
      "design": {
        "title": "라미 로보틱스 설계",
        "subtitle": "핵심 설계 결정",
        "decision1": "UDP 기반 바이너리 프로토콜",
        "detail1": "로봇 제어 명령 및 상태 데이터 실시간 송수신",
        "decision2": "WebRTC 저지연 스트리밍",
        "detail2": "RTSP → H.264 RTP 트랜스코딩 → WebRTC 전송",
        "decision3": "SLAM 기반 맵핑 시스템",
        "detail3": "LiDAR 데이터 기반 실시간 환경 맵 생성",
        "decision4": "A* 경로 계획 알고리즘",
        "detail4": "다층 비용 맵 기반 최적 경로 탐색"
      },
      "implementation": {
        "title": "라미 로보틱스 구현",
        "subtitle": "기술적 도전과 해결",
        "challenge1Title": "도전 1: 바이너리 프로토콜 구현",
        "challenge1Situation": "상황: 공식 SDK 없이 바이너리 프로토콜 직접 구현 필요",
        "challenge1Action": "행동: Wireshark로 패킷 분석, 200+ 바이트 로봇 상태 데이터 파싱",
        "challenge1Impact": "영향: 실시간 양방향 통신 달성 (500ms 주기)",
        "challenge2Title": "도전 2: 저지연 영상 스트리밍",
        "challenge2Situation": "상황: RTSP를 웹에서 재생 불가, HLS는 3~5초 지연",
        "challenge2Action": "행동: FFmpeg로 RTSP → H.264 RTP 트랜스코딩, mediasoup로 WebRTC 전송",
        "challenge2Impact": "영향: 지연 시간 3~5초 → 300~500ms (90% 감소)",
        "challenge3Title": "도전 3: 경로 계획 알고리즘",
        "challenge3Situation": "상황: 복잡한 환경에서 자율 주행 필요",
        "challenge3Action": "행동: 다층 비용 맵 생성, 8방향 이웃 탐색 A* 알고리즘 구현",
        "challenge3Impact": "영향: 4000×4000 가상 월드에서 경로 계획 평균 45ms",
        "challenge4Title": "도전 4: GPU 가속 영상 처리",
        "challenge4Situation": "상황: CPU 기반 영상 처리는 프레임 드롭 발생",
        "challenge4Action": "행동: WebGL Fragment Shader로 GPU 가속 구현",
        "challenge4Impact": "영향: 1920×1080 해상도 30fps 실시간 처리, CPU 사용률 5% 이하"
      },
      "results": {
        "title": "라미 로보틱스 결과",
        "subtitle": "비즈니스 임팩트 및 학습",
        "businessImpactTitle": "비즈니스 임팩트",
        "metric1Value": "90%",
        "metric1Title": "영상 지연 감소",
        "metric1Desc": "3~5초 → 300~500ms",
        "metric2Value": "45ms",
        "metric2Title": "경로 계획 속도",
        "metric2Desc": "실시간 대응 가능",
        "metric3Value": "30fps",
        "metric3Title": "영상 처리 성능",
        "metric3Desc": "CPU 5% 이하",
        "metric4Value": "500ms",
        "metric4Title": "제어 응답성",
        "metric4Desc": "실시간 양방향 통신",
        "technicalDecisionTitle": "기술적 의사결정",
        "technical1": "• Turborepo 모노레포로 apps 분리 (web, motion-host, proxy)",
        "technical2": "• LegendState Observable 패턴으로 반응형 상태 관리",
        "technical3": "• WebGL GPU 가속으로 CPU 부하 최소화",
        "technical4": "• mediasoup SFU로 다중 클라이언트 확장 가능",
        "learningsTitle": "프로젝트를 통해 배운 점",
        "learning1": "• 저수준 UDP 프로토콜 구현 및 바이너리 데이터 파싱 경험",
        "learning2": "• WebRTC SFU 아키텍처 설계 및 실시간 스트리밍 최적화",
        "learning3": "• 경로 계획 알고리즘의 실제 로봇 제어 적용"
      }
    },
    "akaBrowser": {
      "problem": {
        "title": "aka-browser: 미니 브라우저 개발",
        "subtitle": "프로젝트 개요 및 배경",
        "period": "프로젝트 기간",
        "periodValue": "2025.01 ~ 현재 (진행중)",
        "role": "역할",
        "roleValue": "개인 프로젝트 (100%)",
        "techStack": "기술 스택",
        "techStackValue": "Electron, TypeScript, React, Tailwind CSS",
        "painPointTitle": "사용자 페인 포인트",
        "painPoint1": "• 메인 브라우저를 대체하지 않는 보조 브라우저 필요",
        "painPoint2": "• 항상 위에 고정되어 멀티태스킹 지원",
        "painPoint3": "• Netflix/Disney+ 등 DRM 콘텐츠 재생 가능",
        "quote": "\"작업 중 참고 자료를 보거나 영상을 시청할 때, 메인 브라우저의 탭을 전환하지 않고 항상 위에 띄워둘 수 있는 가벼운 브라우저가 필요했습니다.\""
      },
      "design": {
        "title": "aka-browser 설계",
        "subtitle": "시스템 아키텍처",
        "decision1Title": "1. 관심사 분리",
        "decision1Detail1": "• TabManager: 탭 생명주기 관리",
        "decision1Detail2": "• WindowManager: 윈도우 레이아웃 관리",
        "decision1Detail3": "• SecurityManager: URL 검증 + CSP",
        "decision1Detail4": "• BookmarkManager: 즐겨찾기 CRUD",
        "decision2Title": "2. 이벤트 기반 통신",
        "decision2Detail1": "• IPC 채널: 메인 ↔ 렌더러 프로세스 분리",
        "decision2Detail2": "• 타입 안전성: TypeScript 인터페이스 정의",
        "decision2Detail3": "• 보안 검증: 모든 IPC 요청에서 sender 검증",
        "decision3Title": "3. 메모리 최적화",
        "decision3Detail1": "• 비활성 탭: removeChildView()로 렌더링 중단",
        "decision3Detail2": "• LRU 캐시: 테마 컬러 100개 도메인 저장",
        "decision3Detail3": "• 탭 프리뷰: 800x1200 해상도 제한"
      },
      "implementation": {
        "title": "aka-browser 구현",
        "subtitle": "핵심 구현 사항",
        "coreTitle": "핵심 구현 사항",
        "feature1Title": "Widevine DRM 통합",
        "feature1Detail1": "• Castlabs Electron + Component Updater",
        "feature1Detail2": "• EVS VMP 서명 자동화 (afterPack 훅)",
        "feature1Detail3": "• 도메인별 User Agent 전환",
        "feature2Title": "멀티탭 시스템",
        "feature2Detail1": "• WebContentsView 생성 + 이벤트 등록",
        "feature2Detail2": "• 프리뷰 캡처 → 탭 교체 → 테마 적용",
        "feature2Detail3": "• 탭 전환 <100ms, LRU 캐시 최적화",
        "feature3Title": "보안 시스템",
        "feature3Detail1": "• 프로토콜/도메인 검증 + IPC sender 검증",
        "feature3Detail2": "• CSP: 개발/프로덕션 환경 분리",
        "feature4Title": "추가 기능",
        "feature4Detail1": "• 북마크: JSON CRUD + IPC 동기화",
        "feature4Detail2": "• 에러 페이지: 100+ 에러 코드 매핑",
        "challengesTitle": "기술적 도전과 해결",
        "problemLabel": "문제",
        "solutionLabel": "✓ 해결",
        "challenge1Title": "🔴 Widevine 서명 실패",
        "challenge1Problem": "수동 VMP 서명 시 빌드마다 반복 작업 필요",
        "challenge1Solution": "electron-builder afterPack 훅으로 서명 자동화",
        "challenge2Title": "🔴 화면 깜빡임",
        "challenge2Problem": "탭 전환 시 테마 컬러 재계산으로 UI 지연",
        "challenge2Solution": "LRU 캐시로 도메인별 테마 컬러 저장 (100개)",
        "challenge3Title": "🔴 보안 vs 기능",
        "challenge3Problem": "DRM 재생 위해 sandbox 비활성화 필요",
        "challenge3Solution": "프로토콜/도메인/IPC/CSP 4중 검증 체계 구축"
      },
      "results": {
        "title": "aka-browser 결과",
        "subtitle": "프로젝트 성과",
        "metric1Value": "100+",
        "metric1Title": "GitHub Stars",
        "metric1Desc": "오픈소스 공개",
        "metric2Value": "<100ms",
        "metric2Title": "탭 전환 속도",
        "metric2Desc": "LRU 캐시 최적화",
        "metric3Value": "100%",
        "metric3Title": "DRM 재생 성공률",
        "metric3Desc": "Netflix/Disney+/Prime",
        "metric4Value": "4중",
        "metric4Title": "보안 검증",
        "metric4Desc": "프로토콜/도메인/IPC/CSP",
        "achievementsTitle": "정성적 성과",
        "achievement1Title": "✅ 실제 서비스 운영",
        "achievement1": "GitHub 오픈소스 + macOS 배포",
        "achievement2Title": "✅ 기술 부채 관리",
        "achievement2": "TypeScript 엄격 모드 + 모듈화",
        "achievement3Title": "✅ 성능 최적화",
        "achievement3": "LRU 캐시 + 렌더링 최적화",
        "learningsTitle": "프로젝트를 통해 배운 점",
        "learning1Title": "빠른 변화 대응",
        "learning1Detail": "Netflix UA 정책 변경 → 도메인별 UA 전환 (2시간)",
        "learning2Title": "서비스 안정성",
        "learning2Detail": "Widevine 검증 실패 → EVS 서명 자동화",
        "learning3Title": "기술 부채 예방",
        "learning3Detail": "정적 HTML → React TSX 동적 생성",
        "learning4Title": "보안과 기능 균형",
        "learning4Detail": "sandbox 비활성화 → 4중 검증으로 보안 유지"
      }
    },
    "curiosity": {
      "problem": {
        "title": "큐리오시티 개발 배경",
        "subtitle": "비개발자의 빠른 MVP 검증을 위한 온프레미스 AI 코딩 플랫폼",
        "period": "프로젝트 기간",
        "periodValue": "2024.08 ~ 2025.09.12 (중단)",
        "role": "역할",
        "roleValue": "개인 프로젝트 (100%)",
        "problemTitle": "비개발자의 MVP 검증 장벽",
        "problem1": "• 외주 개발 비용: 최소 500만원 이상, 2-3개월 소요",
        "problem2": "• 노코드 툴의 한계: 커스터마이징 불가능",
        "problem3": "• 개발자 채용: 스타트업 초기 단계에서 인건비 부담"
      },
      "design": {
        "title": "큐리오시티 설계",
        "subtitle": "요구사항과 해결 방안",
        "requirement1": "요구사항 1: 브라우저에서 즉시 실행",
        "solution1": "→ WebContainer로 Node.js 환경을 브라우저에서 실행",
        "requirement2": "요구사항 2: AI 에이전트 자동 코딩",
        "solution2": "→ 재귀 구조로 AI가 스스로 계획-실행-검증 반복",
        "requirement3": "요구사항 3: 온프레미스 실행",
        "solution3": "→ 외부 API 의존성 최소화, 폐쇄망 환경 지원 목표"
      },
      "implementation": {
        "title": "큐리오시티 구현",
        "subtitle": "기술적 도전과 해결",
        "coreTitle": "핵심 구현 사항",
        "feature1Title": "1. WebContainer 통합",
        "feature1Detail1": "• 싱글톤 패턴으로 리소스 효율성 극대화",
        "feature1Detail2": "• 파일 시스템 + 터미널 + 프로세스 관리",
        "feature2Title": "2. AI 에이전트 재귀 실행",
        "feature2Detail1": "• 계획 수립 → 도구 실행 → 결과 검증 → 재계획",
        "feature2Detail2": "• 무한 재귀 방지: 패턴 감지 + 최대 깊이 제한",
        "feature3Title": "3. 실시간 코드 실행",
        "feature3Detail1": "• Monaco Editor + WebContainer 통합",
        "feature3Detail2": "• 파일 변경 감지 → 자동 재실행",
        "feature4Title": "4. 도구 시스템",
        "feature4Detail1": "• 파일 읽기/쓰기, 명령 실행, 웹 검색 등",
        "feature4Detail2": "• 클라이언트-서버 도구 분리 설계",
        "challengesTitle": "기술적 도전과 해결",
        "challenge1": "• WebContainer 초기화 시간 최적화 (싱글톤 패턴)",
        "challenge2": "• AI 무한 재귀 방지 (패턴 감지 알고리즘)",
        "challenge3": "• 브라우저 메모리 제약 (점진적 로딩)"
      },
      "results": {
        "title": "큐리오시티 결과",
        "subtitle": "비즈니스 임팩트 및 성과",
        "metric1Value": "100%",
        "metric1Title": "브라우저 실행",
        "metric1Desc": "설치 없이 즉시 사용",
        "metric2Value": "10초",
        "metric2Title": "평균 응답 시간",
        "metric2Desc": "AI 코드 생성",
        "metric3Value": "30+",
        "metric3Title": "지원 도구",
        "metric3Desc": "파일/명령/검색 등",
        "learningsTitle": "프로젝트를 통해 배운 점",
        "architectureTitle": "아키텍처 설계",
        "architecture1": "• WebContainer 싱글톤 패턴으로 리소스 효율성 극대화",
        "architecture2": "• 재귀 구조로 복잡한 비즈니스 로직을 단순하게 표현",
        "architecture3": "• 클라이언트-서버 도구 분리로 확장 가능한 구조 설계",
        "balanceTitle": "안정성과 사용성의 균형",
        "balance1": "• 무한 재귀의 위험성을 패턴 감지로 해결",
        "balance2": "• 개별 도구 실패가 전체 플로우를 중단시키지 않도록 설계",
        "balance3": "• 비개발자도 이해할 수 있는 직관적인 피드백 제공",
        "discontinuedTitle": "프로젝트 중단 (2025년 9월 12일)",
        "discontinued1": "• 온프레미스 LLM 통합 작업 미완료",
        "discontinued2": "• 외부 API 의존성 제거 목표 미달성",
        "discontinued3": "• 라미앱 프로젝트로 리소스 집중",
        "futureTitle": "향후 개선 방향 (중단 전 계획)",
        "future1": "• 온프레미스 LLM 서버 통합",
        "future2": "• 폐쇄망 환경 완전 독립 실행",
        "future3": "• 도구 실행 병렬화"
      }
    }
  }
}
